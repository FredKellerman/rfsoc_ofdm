-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\OFDM_tx\hdlsrc\OFDM_Tx_Rx_HW\ofdm_tx_src_16QAMMap.vhd
-- Created: 2021-01-08 12:14:22
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ofdm_tx_src_16QAMMap
-- Source Path: OFDM_Tx_Rx_HW/OFDMTx/DataGenerator/SymbolsGen/16QAMMap
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ofdm_tx_src_16QAMMap IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_192_0                       :   IN    std_logic;
        ints                              :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        validIn                           :   IN    std_logic;
        alpha16QAM_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        alpha16QAM_im                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END ofdm_tx_src_16QAMMap;


ARCHITECTURE rtl OF ofdm_tx_src_16QAMMap IS

  -- Signals
  SIGNAL Constant4_out1_re                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant4_out1_im                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL ints_unsigned                    : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Constant_out1_re                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant_out1_im                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant1_out1_re                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant1_out1_im                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant5_out1_re                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant5_out1_im                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant6_out1_re                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant6_out1_im                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant7_out1_re                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant7_out1_im                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant8_out1_re                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant8_out1_im                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant9_out1_re                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant9_out1_im                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant10_out1_re               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant10_out1_im               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant11_out1_re               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant11_out1_im               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant12_out1_re               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant12_out1_im               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant13_out1_re               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant13_out1_im               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant14_out1_re               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant14_out1_im               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant3_out1_re                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant3_out1_im                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant15_out1_re               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant15_out1_im               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant16_out1_re               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant16_out1_im               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant17_out1_re               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant17_out1_im               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Multiport_Switch_out1_re         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Multiport_Switch_out1_im         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Multiport_Switch_out1_re_1       : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Multiport_Switch_out1_im_1       : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Switch_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Switch_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  Constant4_out1_re <= to_signed(16#0000#, 16);
  Constant4_out1_im <= to_signed(16#0000#, 16);

  ints_unsigned <= unsigned(ints);

  Constant_out1_re <= to_signed(-16#3CB7#, 16);
  Constant_out1_im <= to_signed(-16#3CB7#, 16);

  Constant1_out1_re <= to_signed(-16#3CB7#, 16);
  Constant1_out1_im <= to_signed(-16#143D#, 16);

  Constant5_out1_re <= to_signed(-16#3CB7#, 16);
  Constant5_out1_im <= to_signed(16#3CB7#, 16);

  Constant6_out1_re <= to_signed(-16#3CB7#, 16);
  Constant6_out1_im <= to_signed(16#143D#, 16);

  Constant7_out1_re <= to_signed(-16#143D#, 16);
  Constant7_out1_im <= to_signed(-16#3CB7#, 16);

  Constant8_out1_re <= to_signed(-16#143D#, 16);
  Constant8_out1_im <= to_signed(-16#143D#, 16);

  Constant9_out1_re <= to_signed(-16#143D#, 16);
  Constant9_out1_im <= to_signed(16#3CB7#, 16);

  Constant10_out1_re <= to_signed(-16#143D#, 16);
  Constant10_out1_im <= to_signed(16#143D#, 16);

  Constant11_out1_re <= to_signed(16#3CB7#, 16);
  Constant11_out1_im <= to_signed(-16#3CB7#, 16);

  Constant12_out1_re <= to_signed(16#3CB7#, 16);
  Constant12_out1_im <= to_signed(-16#143D#, 16);

  Constant13_out1_re <= to_signed(16#3CB7#, 16);
  Constant13_out1_im <= to_signed(16#3CB7#, 16);

  Constant14_out1_re <= to_signed(16#3CB7#, 16);
  Constant14_out1_im <= to_signed(16#143D#, 16);

  Constant3_out1_re <= to_signed(16#143D#, 16);
  Constant3_out1_im <= to_signed(-16#3CB7#, 16);

  Constant15_out1_re <= to_signed(16#143D#, 16);
  Constant15_out1_im <= to_signed(-16#143D#, 16);

  Constant16_out1_re <= to_signed(16#143D#, 16);
  Constant16_out1_im <= to_signed(16#3CB7#, 16);

  Constant17_out1_re <= to_signed(16#143D#, 16);
  Constant17_out1_im <= to_signed(16#143D#, 16);

  
  Multiport_Switch_out1_re <= Constant_out1_re WHEN ints_unsigned = to_unsigned(16#0#, 4) ELSE
      Constant1_out1_re WHEN ints_unsigned = to_unsigned(16#1#, 4) ELSE
      Constant5_out1_re WHEN ints_unsigned = to_unsigned(16#2#, 4) ELSE
      Constant6_out1_re WHEN ints_unsigned = to_unsigned(16#3#, 4) ELSE
      Constant7_out1_re WHEN ints_unsigned = to_unsigned(16#4#, 4) ELSE
      Constant8_out1_re WHEN ints_unsigned = to_unsigned(16#5#, 4) ELSE
      Constant9_out1_re WHEN ints_unsigned = to_unsigned(16#6#, 4) ELSE
      Constant10_out1_re WHEN ints_unsigned = to_unsigned(16#7#, 4) ELSE
      Constant11_out1_re WHEN ints_unsigned = to_unsigned(16#8#, 4) ELSE
      Constant12_out1_re WHEN ints_unsigned = to_unsigned(16#9#, 4) ELSE
      Constant13_out1_re WHEN ints_unsigned = to_unsigned(16#A#, 4) ELSE
      Constant14_out1_re WHEN ints_unsigned = to_unsigned(16#B#, 4) ELSE
      Constant3_out1_re WHEN ints_unsigned = to_unsigned(16#C#, 4) ELSE
      Constant15_out1_re WHEN ints_unsigned = to_unsigned(16#D#, 4) ELSE
      Constant16_out1_re WHEN ints_unsigned = to_unsigned(16#E#, 4) ELSE
      Constant17_out1_re;
  
  Multiport_Switch_out1_im <= Constant_out1_im WHEN ints_unsigned = to_unsigned(16#0#, 4) ELSE
      Constant1_out1_im WHEN ints_unsigned = to_unsigned(16#1#, 4) ELSE
      Constant5_out1_im WHEN ints_unsigned = to_unsigned(16#2#, 4) ELSE
      Constant6_out1_im WHEN ints_unsigned = to_unsigned(16#3#, 4) ELSE
      Constant7_out1_im WHEN ints_unsigned = to_unsigned(16#4#, 4) ELSE
      Constant8_out1_im WHEN ints_unsigned = to_unsigned(16#5#, 4) ELSE
      Constant9_out1_im WHEN ints_unsigned = to_unsigned(16#6#, 4) ELSE
      Constant10_out1_im WHEN ints_unsigned = to_unsigned(16#7#, 4) ELSE
      Constant11_out1_im WHEN ints_unsigned = to_unsigned(16#8#, 4) ELSE
      Constant12_out1_im WHEN ints_unsigned = to_unsigned(16#9#, 4) ELSE
      Constant13_out1_im WHEN ints_unsigned = to_unsigned(16#A#, 4) ELSE
      Constant14_out1_im WHEN ints_unsigned = to_unsigned(16#B#, 4) ELSE
      Constant3_out1_im WHEN ints_unsigned = to_unsigned(16#C#, 4) ELSE
      Constant15_out1_im WHEN ints_unsigned = to_unsigned(16#D#, 4) ELSE
      Constant16_out1_im WHEN ints_unsigned = to_unsigned(16#E#, 4) ELSE
      Constant17_out1_im;

  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Multiport_Switch_out1_re_1 <= to_signed(16#0000#, 16);
      Multiport_Switch_out1_im_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_192_0 = '1' THEN
        Multiport_Switch_out1_re_1 <= Multiport_Switch_out1_re;
        Multiport_Switch_out1_im_1 <= Multiport_Switch_out1_im;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  
  Switch_out1_re <= Constant4_out1_re WHEN validIn = '0' ELSE
      Multiport_Switch_out1_re_1;
  
  Switch_out1_im <= Constant4_out1_im WHEN validIn = '0' ELSE
      Multiport_Switch_out1_im_1;

  alpha16QAM_re <= std_logic_vector(Switch_out1_re);

  alpha16QAM_im <= std_logic_vector(Switch_out1_im);

END rtl;

