-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\OFDM_tx\hdlsrc\OFDM_Tx_Rx_HW\ofdm_tx_src_Mux2_block.vhd
-- Created: 2021-01-08 12:14:22
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ofdm_tx_src_Mux2_block
-- Source Path: OFDM_Tx_Rx_HW/OFDMTx/SCMapper/Mux2
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ofdm_tx_src_Mux2_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_192_0                       :   IN    std_logic;
        preamb_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        preamb_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        preambVal                         :   IN    std_logic;
        data_re                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        data_im                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataVal                           :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataOut_im                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END ofdm_tx_src_Mux2_block;


ARCHITECTURE rtl OF ofdm_tx_src_Mux2_block IS

  -- Signals
  SIGNAL preamb_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL preamb_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL preambVal_1                      : std_logic;
  SIGNAL data_re_signed                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL data_im_signed                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dataVal_1                        : std_logic;
  SIGNAL dataOut_re_tmp                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dataOut_im_tmp                   : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  preamb_re_signed <= signed(preamb_re);

  preamb_im_signed <= signed(preamb_im);

  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      preambVal_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_192_0 = '1' THEN
        preambVal_1 <= preambVal;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  data_re_signed <= signed(data_re);

  data_im_signed <= signed(data_im);

  delayMatch1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataVal_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_192_0 = '1' THEN
        dataVal_1 <= dataVal;
      END IF;
    END IF;
  END PROCESS delayMatch1_process;


  OFDM_Tx_c5_Mux2_output : PROCESS (dataVal_1, data_im_signed, data_re_signed, preambVal_1, preamb_im_signed,
       preamb_re_signed)
  BEGIN
    IF preambVal_1 = '1' THEN 
      dataOut_re_tmp <= preamb_re_signed;
      dataOut_im_tmp <= preamb_im_signed;
    ELSIF dataVal_1 = '1' THEN 
      dataOut_re_tmp <= data_re_signed;
      dataOut_im_tmp <= data_im_signed;
    ELSE 
      dataOut_re_tmp <= to_signed(16#0000#, 16);
      dataOut_im_tmp <= to_signed(16#0000#, 16);
    END IF;
  END PROCESS OFDM_Tx_c5_Mux2_output;


  dataOut_re <= std_logic_vector(dataOut_re_tmp);

  dataOut_im <= std_logic_vector(dataOut_im_tmp);

END rtl;

