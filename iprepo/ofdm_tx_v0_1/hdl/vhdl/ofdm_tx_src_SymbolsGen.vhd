-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\OFDM_tx\hdlsrc\OFDM_Tx_Rx_HW\ofdm_tx_src_SymbolsGen.vhd
-- Created: 2021-01-08 12:14:22
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ofdm_tx_src_SymbolsGen
-- Source Path: OFDM_Tx_Rx_HW/OFDMTx/DataGenerator/SymbolsGen
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ofdm_tx_src_SymbolsGen IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_192_0                       :   IN    std_logic;
        modScheme                         :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        valid                             :   IN    std_logic;
        symbsOut_re                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        symbsOut_im                       :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END ofdm_tx_src_SymbolsGen;


ARCHITECTURE rtl OF ofdm_tx_src_SymbolsGen IS

  -- Component Declarations
  COMPONENT ofdm_tx_src_DataGenBPSK
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_192_0                     :   IN    std_logic;
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT ofdm_tx_src_BPSKmap
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_192_0                     :   IN    std_logic;
          bits                            :   IN    std_logic;
          validIn                         :   IN    std_logic;
          BPSKOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          BPSKOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT ofdm_tx_src_DataGenQPSK
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_192_0                     :   IN    std_logic;
          y                               :   OUT   std_logic_vector(1 DOWNTO 0)  -- ufix2
          );
  END COMPONENT;

  COMPONENT ofdm_tx_src_QPSKMap
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_192_0                     :   IN    std_logic;
          ints                            :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          validIn                         :   IN    std_logic;
          QPSKOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          QPSKOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT ofdm_tx_src_DataGen16QAM
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_192_0                     :   IN    std_logic;
          y                               :   OUT   std_logic_vector(3 DOWNTO 0)  -- ufix4
          );
  END COMPONENT;

  COMPONENT ofdm_tx_src_16QAMMap
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_192_0                     :   IN    std_logic;
          ints                            :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          validIn                         :   IN    std_logic;
          alpha16QAM_re                   :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          alpha16QAM_im                   :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ofdm_tx_src_DataGenBPSK
    USE ENTITY work.ofdm_tx_src_DataGenBPSK(rtl);

  FOR ALL : ofdm_tx_src_BPSKmap
    USE ENTITY work.ofdm_tx_src_BPSKmap(rtl);

  FOR ALL : ofdm_tx_src_DataGenQPSK
    USE ENTITY work.ofdm_tx_src_DataGenQPSK(rtl);

  FOR ALL : ofdm_tx_src_QPSKMap
    USE ENTITY work.ofdm_tx_src_QPSKMap(rtl);

  FOR ALL : ofdm_tx_src_DataGen16QAM
    USE ENTITY work.ofdm_tx_src_DataGen16QAM(rtl);

  FOR ALL : ofdm_tx_src_16QAMMap
    USE ENTITY work.ofdm_tx_src_16QAMMap(rtl);

  -- Signals
  SIGNAL modScheme_unsigned               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL DataGenBPSK_out1                 : std_logic;
  SIGNAL BPSKmap_out1_re                  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL BPSKmap_out1_im                  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL BPSKmap_out1_re_signed           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL BPSKmap_out1_im_signed           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL y                                : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL QPSKMap_out1_re                  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL QPSKMap_out1_im                  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL QPSKMap_out1_re_signed           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL QPSKMap_out1_im_signed           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL y_1                              : std_logic_vector(3 DOWNTO 0);  -- ufix4
  SIGNAL alpha16QAMMap_out1_re            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL alpha16QAMMap_out1_im            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL alpha16QAMMap_out1_re_signed     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL alpha16QAMMap_out1_im_signed     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Multiport_Switch_out1_re         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Multiport_Switch_out1_im         : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  u_DataGenBPSK : ofdm_tx_src_DataGenBPSK
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_192_0 => enb_1_192_0,
              y => DataGenBPSK_out1
              );

  u_BPSKmap : ofdm_tx_src_BPSKmap
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_192_0 => enb_1_192_0,
              bits => DataGenBPSK_out1,
              validIn => valid,
              BPSKOut_re => BPSKmap_out1_re,  -- sfix16_En14
              BPSKOut_im => BPSKmap_out1_im  -- sfix16_En14
              );

  u_DataGenQPSK : ofdm_tx_src_DataGenQPSK
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_192_0 => enb_1_192_0,
              y => y  -- ufix2
              );

  u_QPSKMap : ofdm_tx_src_QPSKMap
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_192_0 => enb_1_192_0,
              ints => y,  -- ufix2
              validIn => valid,
              QPSKOut_re => QPSKMap_out1_re,  -- sfix16_En14
              QPSKOut_im => QPSKMap_out1_im  -- sfix16_En14
              );

  u_DataGen16QAM : ofdm_tx_src_DataGen16QAM
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_192_0 => enb_1_192_0,
              y => y_1  -- ufix4
              );

  u_16QAMMap : ofdm_tx_src_16QAMMap
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_192_0 => enb_1_192_0,
              ints => y_1,  -- ufix4
              validIn => valid,
              alpha16QAM_re => alpha16QAMMap_out1_re,  -- sfix16_En14
              alpha16QAM_im => alpha16QAMMap_out1_im  -- sfix16_En14
              );

  modScheme_unsigned <= unsigned(modScheme);

  BPSKmap_out1_re_signed <= signed(BPSKmap_out1_re);

  BPSKmap_out1_im_signed <= signed(BPSKmap_out1_im);

  QPSKMap_out1_re_signed <= signed(QPSKMap_out1_re);

  QPSKMap_out1_im_signed <= signed(QPSKMap_out1_im);

  alpha16QAMMap_out1_re_signed <= signed(alpha16QAMMap_out1_re);

  alpha16QAMMap_out1_im_signed <= signed(alpha16QAMMap_out1_im);

  
  Multiport_Switch_out1_re <= BPSKmap_out1_re_signed WHEN modScheme_unsigned = to_unsigned(16#0#, 2) ELSE
      QPSKMap_out1_re_signed WHEN modScheme_unsigned = to_unsigned(16#1#, 2) ELSE
      alpha16QAMMap_out1_re_signed;
  
  Multiport_Switch_out1_im <= BPSKmap_out1_im_signed WHEN modScheme_unsigned = to_unsigned(16#0#, 2) ELSE
      QPSKMap_out1_im_signed WHEN modScheme_unsigned = to_unsigned(16#1#, 2) ELSE
      alpha16QAMMap_out1_im_signed;

  symbsOut_re <= std_logic_vector(Multiport_Switch_out1_re);

  symbsOut_im <= std_logic_vector(Multiport_Switch_out1_im);

END rtl;

