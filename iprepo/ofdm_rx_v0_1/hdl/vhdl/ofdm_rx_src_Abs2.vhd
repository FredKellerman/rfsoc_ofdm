-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\OFDM_rx\hdlsrc\OFDM_Tx_Rx_HW\ofdm_rx_src_Abs2.vhd
-- Created: 2021-01-08 12:41:56
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ofdm_rx_src_Abs2
-- Source Path: OFDM_Tx_Rx_HW/OFDMRx/ChannelEstEq/Equalise/Abs2
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ofdm_rx_src_Abs2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_192_0                       :   IN    std_logic;
        ChEstIn_re                        :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En14
        ChEstIn_im                        :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En14
        Out1                              :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En14
        );
END ofdm_rx_src_Abs2;


ARCHITECTURE rtl OF ofdm_rx_src_Abs2 IS

  -- Signals
  SIGNAL ChEstIn_re_signed                : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL ChEstIn_im_signed                : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Delay_out1                       : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Delay_out1_1                     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Product_out1                     : signed(33 DOWNTO 0);  -- sfix34_En28
  SIGNAL Product_out1_1                   : signed(33 DOWNTO 0);  -- sfix34_En28
  SIGNAL Delay1_out1                      : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Delay1_out1_1                    : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Product1_out1                    : signed(33 DOWNTO 0);  -- sfix34_En28
  SIGNAL Product1_out1_1                  : signed(33 DOWNTO 0);  -- sfix34_En28
  SIGNAL Add_add_cast                     : signed(34 DOWNTO 0);  -- sfix35_En28
  SIGNAL Add_add_cast_1                   : signed(34 DOWNTO 0);  -- sfix35_En28
  SIGNAL Add_add_temp                     : signed(34 DOWNTO 0);  -- sfix35_En28
  SIGNAL Add_out1                         : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL Delay4_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En14

BEGIN
  ChEstIn_re_signed <= signed(ChEstIn_re);

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_192_0 = '1' THEN
        Delay_out1 <= ChEstIn_re_signed;
      END IF;
    END IF;
  END PROCESS Delay_process;


  reduced_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_192_0 = '1' THEN
        Delay_out1_1 <= Delay_out1;
      END IF;
    END IF;
  END PROCESS reduced_process;


  Product_out1 <= Delay_out1_1 * Delay_out1_1;

  PipelineRegister_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_192_0 = '1' THEN
        Product_out1_1 <= Product_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  ChEstIn_im_signed <= signed(ChEstIn_im);

  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_192_0 = '1' THEN
        Delay1_out1 <= ChEstIn_im_signed;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  reduced_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_192_0 = '1' THEN
        Delay1_out1_1 <= Delay1_out1;
      END IF;
    END IF;
  END PROCESS reduced_1_process;


  Product1_out1 <= Delay1_out1_1 * Delay1_out1_1;

  PipelineRegister1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_192_0 = '1' THEN
        Product1_out1_1 <= Product1_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister1_process;


  Add_add_cast <= resize(Product_out1_1, 35);
  Add_add_cast_1 <= resize(Product1_out1_1, 35);
  Add_add_temp <= Add_add_cast + Add_add_cast_1;
  Add_out1 <= unsigned(Add_add_temp(29 DOWNTO 14));

  Delay4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay4_out1 <= to_unsigned(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_192_0 = '1' THEN
        Delay4_out1 <= Add_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  Out1 <= std_logic_vector(Delay4_out1);

END rtl;

